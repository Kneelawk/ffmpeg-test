// Generated by jextract

package org.ffmpeg.libavformat;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class avformat_h  {

    public static final OfByte C_CHAR = JAVA_BYTE;
    public static final OfShort C_SHORT = JAVA_SHORT;
    public static final OfInt C_INT = JAVA_INT;
    public static final OfLong C_LONG = JAVA_LONG;
    public static final OfLong C_LONG_LONG = JAVA_LONG;
    public static final OfFloat C_FLOAT = JAVA_FLOAT;
    public static final OfDouble C_DOUBLE = JAVA_DOUBLE;
    public static final AddressLayout C_POINTER = RuntimeHelper.POINTER;
    public static MethodHandle avformat_open_input$MH() {
        return RuntimeHelper.requireNonNull(constants$13.const$5,"avformat_open_input");
    }
    /**
     * {@snippet :
     * int avformat_open_input(AVFormatContext** ps, char* url, const AVInputFormat* fmt, AVDictionary** options);
     * }
     */
    public static int avformat_open_input(MemorySegment ps, MemorySegment url, MemorySegment fmt, MemorySegment options) {
        var mh$ = avformat_open_input$MH();
        try {
            return (int)mh$.invokeExact(ps, url, fmt, options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle avformat_find_stream_info$MH() {
        return RuntimeHelper.requireNonNull(constants$14.const$0,"avformat_find_stream_info");
    }
    /**
     * {@snippet :
     * int avformat_find_stream_info(AVFormatContext* ic, AVDictionary** options);
     * }
     */
    public static int avformat_find_stream_info(MemorySegment ic, MemorySegment options) {
        var mh$ = avformat_find_stream_info$MH();
        try {
            return (int)mh$.invokeExact(ic, options);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle av_dump_format$MH() {
        return RuntimeHelper.requireNonNull(constants$14.const$2,"av_dump_format");
    }
    /**
     * {@snippet :
     * void av_dump_format(AVFormatContext* ic, int index, char* url, int is_output);
     * }
     */
    public static void av_dump_format(MemorySegment ic, int index, MemorySegment url, int is_output) {
        var mh$ = av_dump_format$MH();
        try {
            mh$.invokeExact(ic, index, url, is_output);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


