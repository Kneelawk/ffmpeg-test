// Generated by jextract

package org.ffmpeg.libswscale;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class swscale_h  {

    public static final OfByte C_CHAR = JAVA_BYTE;
    public static final OfShort C_SHORT = JAVA_SHORT;
    public static final OfInt C_INT = JAVA_INT;
    public static final OfLong C_LONG = JAVA_LONG;
    public static final OfLong C_LONG_LONG = JAVA_LONG;
    public static final OfFloat C_FLOAT = JAVA_FLOAT;
    public static final OfDouble C_DOUBLE = JAVA_DOUBLE;
    public static final AddressLayout C_POINTER = RuntimeHelper.POINTER;
    public static MethodHandle sws_freeContext$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$1,"sws_freeContext");
    }
    /**
     * {@snippet :
     * void sws_freeContext(struct SwsContext* swsContext);
     * }
     */
    public static void sws_freeContext(MemorySegment swsContext) {
        var mh$ = sws_freeContext$MH();
        try {
            mh$.invokeExact(swsContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sws_getContext$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$3,"sws_getContext");
    }
    /**
     * {@snippet :
     * struct SwsContext* sws_getContext(int srcW, int srcH, enum AVPixelFormat srcFormat, int dstW, int dstH, enum AVPixelFormat dstFormat, int flags, SwsFilter* srcFilter, SwsFilter* dstFilter, double* param);
     * }
     */
    public static MemorySegment sws_getContext(int srcW, int srcH, int srcFormat, int dstW, int dstH, int dstFormat, int flags, MemorySegment srcFilter, MemorySegment dstFilter, MemorySegment param) {
        var mh$ = sws_getContext$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(srcW, srcH, srcFormat, dstW, dstH, dstFormat, flags, srcFilter, dstFilter, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sws_scale_frame$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$5,"sws_scale_frame");
    }
    /**
     * {@snippet :
     * int sws_scale_frame(struct SwsContext* c, AVFrame* dst, const AVFrame* src);
     * }
     */
    public static int sws_scale_frame(MemorySegment c, MemorySegment dst, MemorySegment src) {
        var mh$ = sws_scale_frame$MH();
        try {
            return (int)mh$.invokeExact(c, dst, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


